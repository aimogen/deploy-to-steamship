name: Deploy to Steamship
description: Deploys a Steamship app or plugin.
inputs:
  steamship_key:  # id of input
    description: 'Steamship API Key'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install Virtualenv
      shell: bash
      run: |
        python3 -m venv .venv
    - name: Activate Virtualenv
      shell: bash
      run: |
        source .venv/bin/activate
    - name: Install Dependencies
      shell: bash
      run: |
        python -m pip install -r requirements.txt
    - name: Install Development Dependencies
      shell: bash
      run: |
        python -m pip install -r requirements.dev.txt
    - name: Run test suite
      shell: bash
      run: |
        pytest
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "14"
    - name: Install Steamship CLI
      shell: bash
      run: npm install -g @steamship/cli

    # Sanity Check:
    #   If the STEAMSHIP_API_KEY variable isn't present, the output of this step will help debug that.
    - name: Test Steamship Authentication
      shell: bash
      run: ship user:info
      env:
        STEAMSHIP_API_KEY: ${{ inputs.steamship_key }}

    # Sanity Check:
    #   Tag Version should match Steamship.json version
    - name: Get Tag Versions
      shell: bash
      id: versions
      run: |
        TAG_VERSION=${GITHUB_REF/refs\/tags\/v/}
        PKG_VERSION=`ship project:get version`
        echo "::set-output name=TAG::$TAG_VERSION"
        echo "::set-output name=PKG::$PKG_VERSION"
    - name: Fail if the tags aren't equal
      if: ${{ (!(steps.versions.outputs.TAG == steps.versions.outputs.PKG)) }}
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed("The tag version (${{ steps.versions.outputs.TAG }}) and the steamship.json version (${{ steps.versions.outputs.PKG }}) are different.")

    # Sanity Check:
    #   Steamship.json type should be plugin or app
    - name: Get the Package Type
      shell: bash
      id: package_type
      run: |
        PKG_TYPE=`ship project:get type`
        TYPE_PLG=plugin
        TYPE_APP=app
        echo "::set-output name=TPE::$PKG_TYPE"
        echo "::set-output name=PLG::$TYPE_PLG"
        echo "::set-output name=APP::$TYPE_APP"
    - name: Require valid type
      if: ${{ (!((steps.package_type.outputs.TPE == steps.package_type.outputs.PLG) || (steps.package_type.outputs.TPE == steps.package_type.outputs.APP))) }}
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed("The package type (${{ steps.package_type.outputs.TPE }}) must be 'plugin' or 'app' to deploy via this action.")

    # Maybe Deploy the Plugin
    - name: Deploy Plugin
      if: ${{ steps.package_type.outputs.TPE == steps.package_type.outputs.PLG }}
      shell: bash
      run: ship plugin:deploy
      env:
        STEAMSHIP_API_KEY: ${{ inputs.steamship_key }}

    # Maybe Deploy the App
    - name: Deploy App
      if: ${{ steps.package_type.outputs.TPE == steps.package_type.outputs.APP }}
      shell: bash
      run: ship app:deploy
      env:
        STEAMSHIP_API_KEY: ${{ inputs.steamship_key }}
